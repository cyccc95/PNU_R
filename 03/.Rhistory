theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
dfc = read.csv("03_암발생자수.csv", fileEncoding = "euc-kr")
dfc
names(dfc)
str(dfc)
dfc2 = dfc %>% filter(X24개.암종별 == "모든 암(C00-C96)", !(연령별 %in% c("연령미상","계")))
unique(dfc2$연령별)
unique(dfc2$연령대)
dfc2$연령대 = ifelse(dfc2$연령별 %in% dfc2$연령별[1:8], "30대이하",
ifelse(dfc2$연령별 %in% dfc2$연령별[9:12], "40~50대",
ifelse(dfc2$연령별 %in% dfc2$연령별[13:16], "60~70대", "80대이상")))
qplot(연령대, data = dfc2, fill = 성별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(mapping =aes(x=연령대, y=계, fill=성별), data=dfc) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
names(dfc)
qplot(연령대, data = dfc2, fill = 성별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
dfc = read.csv("03_암발생자수.csv", fileEncoding = "euc-kr")
dfc
names(dfc)
str(dfc)
dfc = dfc %>% filter(X24개.암종별 == "모든 암(C00-C96)", !(연령별 %in% c("연령미상","계")))
unique(dfc$연령별)
unique(dfc$연령대)
dfc$연령대 = ifelse(dfc$연령별 %in% dfc$연령별[1:8], "30대이하",
ifelse(dfc$연령별 %in% dfc$연령별[9:12], "40~50대",
ifelse(dfc$연령별 %in% dfc$연령별[13:16], "60~70대", "80대이상")))
qplot(연령대, data = dfc, fill = 성별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
dfc
dfc2 <- dfc %>% group_by(연령대, sum(X2019, X2019.1))
dfc2 <- dfc %>% group_by(연령대, 계 = sum(X2019, X2019.1))
%>% summarise(계 = sum(X2019.1))
%>% summarise(계 = sum(X2019, X2019.1))
names(dfc)
dfc$X2019 <- as.numeric(dfc$X2019)
dfc$X2019.1 <- as.numeric(dfc$X2019.1)
%>% summarise(계 = sum(X2019.1))
dfc2 <- dfc %>% group_by(연령대, 성별)%>% summarise(계 = sum(X2019))
dfc2
qplot(연령대, data = dfc2, fill = 성별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
dfc2
qplot(연령대, data = dfc2, fill = 성별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
qplot(연령대, data = dfc2, fill = 연령별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
qplot(연령대, data = dfc2, fill = 성별)+
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
ggplot(mapping =aes(x=연령대, y=연령별, fill=성별), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=연령대, y=성별, fill=성별), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=연령대, y=성별, fill=연령대), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=연령대, y=성별, fill=성별), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
names(dfc)
ggplot(mapping =aes(x=연령대, y=연령별, fill=성별), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=연령대, fill=성별), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
dfc2
ggplot(mapping =aes(x=연령대, y=계, fill=성별), data=dfc2) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
dfc2
library(KoNLP)
library(KoNLP)
# rJava 설치
install.packages("rJava")
# 환경 설정
writeLines('PATH="{RTOOLS40_HOME}\\usr\\bin;${PATH}"')
# make 확인
Sys.which("make")
# # 2.4 패키지 설치
install.packages("jsonlite", type = "source")
# 3. java, rJava 설치하기
install.packages("multilinguer")
library(multilinguer)
#암종류별 성별 분석
library(dplyr)
##################################################
# 고속도로 역주행 교통사고와 일반 교통사고 분석
install.packages(("readxl"))
library(readxl)
df = read_excel("02_역주행사고.xlsx")
names(df)
df = read_excel("02_역주행사고.xlsx")
df = read_excel("C:/Rwork/02/02_역주행사고.xlsx")
names(df)
df
# 전체
df1 = subset(df, df$구분 == "전체")
df1
# 역주행
df2 = df[df$구분 == "역주행", ]
df2
# 일반
df3 = df1
df3
df3$구분 = "일반"
df3
df1
#데이터 불러오기(암발생자수)
df1 <- read.csv("C:/Rwork/03/03_암발생자수.csv")
df1
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
df1(names)
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1)
df1[names] <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
names(df1) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1)
df1
# 데이터셋 조회
# 1) 특정 변수 조회
df1['암종별']
df1
View(df1)
t1 <- df1$암종별
t1
modt(t1)
mode(t1)
class(t1)
is.vertor(t1)
is.vector(t1)
# 2) 특정 열명을 사용하여 조회
t2 <- df1['암종별']
mode(t2)
class(t2)
t1 <- df1$암종별
t1
class(t1)
mode(t1)
class(t2)
# 3) 특정 행 조회 :1행 조회
df1[1]
# 3) 특정 행 조회 :1행 조회
df1[1]
# 3) 특정 행 조회 :1행 조회
df1[1,]
# 2 ~ 4행 조회
df1[c(2, 4),]
# 4)특정행 제거 : 1행제거
df1[-1, ]
head(df1)
# 4)특정행 제거 : 1행제거
df2 <- df1[-1, ]
head(df2)
# 암종류 확인
df2$암종별
# 암종류 확인
unique(df2$암종별)
# 모든 암 제거
df3 <- df1 %>%
filter(암종별 != "모든 암(C00-C96)")
df3
unique(df3$암종별)
# 암종류 확인
unique(df2$암종별) # 중복제거
unique(df3$암종별)
# 모든 암 제거
df3 <- df1[-1, ] %>%
filter(암종별 != "모든 암(C00-C96)")
unique(df3$암종별)
df3
# 모든 암 제거
df3 <- df1[-1, ] %>%
filter(암종별 != "모든 암(C00-C96)") %>%
filter(연령별 == "계")
df3
df3
df31 <- df3 %>%
filter(성별 == "계")
df31
df32 <- df3 %>%
filter(성별 != "계")
df32
df31 <- df31[, c('암종별', "발생자수")]
df31
df32 <- df32[, c('암종별', '성별', "발생자수")]
df32
plot(df31)
df31
plot('암종별','발생자수')
help(plot)
# 5) 특정행 열 조회
df[1,1]
# 5) 특정행 열 조회
df31[1,1]
# 5) 특정행 열 조회
df31[1,'암종별']
df31[1:3,'암종별']
df31[1:3, c('암종별','발생자수')]
# 열 데이터 타입 확인
str(df1)
View(df1)
# 값 변경 : - => 0
df1$발생자수 <- ifelse(df1$발생자수 == '-', 0, df1$발생자수)
View(df1)
df1$조발생률 <- ifelse(df1$조발생률 == '-', 0, df1$조발생률)
View(df1)
# 열 데이터타입 변경
df1$발생자수 <- as.numeric(df1$발생자수)
df1$조발생률 <- as.numeric(df1$조발생률)
# 열 데이터 타입 확인
str(df1)
#암종류별 성별 분석
library(dplyr)
#데이터 불러오기(암발생자수)
df1 <- read.csv("C:/Rwork/03/03_암발생자수.csv")
df1
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1)
names(df1) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
df1
# 데이터셋 조회
# 1) 특정 변수 조회
df1['암종별']
t1 <- df1$암종별 # vector
mode(t1)
class(t1)
# 2) 특정 열명을 사용하여 조회
t2 <- df1['암종별'] # dataframe
mode(t2)
class(t2)
# 3) 특정 행 조회 :1행 조회
df1[1,]
# 2, 4행 조회
df1[c(2, 4),]
# 4)특정행 제거 : 1행제거
df2 <- df1[-1, ]
head(df2)
# 암종류 확인
unique(df2$암종별) # 중복제거
# 5) 특정행 열 조회
df31[1,'암종별']
df31[1:3, '암종별']
df31[1:3, c('암종별','발생자수')]
# 열 데이터 타입 확인
str(df1)
# 값 변경 : - => 0
df1$발생자수 <- ifelse(df1$발생자수 == '-', 0, df1$발생자수)
df1$조발생률 <- ifelse(df1$조발생률 == '-', 0, df1$조발생률)
# 열 데이터타입 변경
df1$발생자수 <- as.numeric(df1$발생자수)
df1$조발생률 <- as.numeric(df1$조발생률)
# 모든암 제거하고 연령별이 계인 데이터
df3 <- df1[-1, ] %>%
filter(암종별 != "모든 암(C00-C96)") %>%
filter(연령별 == "계")
unique(df3$암종별)
df3
df31 <- df3 %>%
filter(성별 == "계")
df31
df32 <- df3 %>%
filter(성별 != "계")
df32
df31 <- df31[, c('암종별', "발생자수")]
df31
df32 <- df32[, c('암종별', '성별', "발생자수")]
df32
df32
df31
df3
#데이터 불러오기(암발생자수)
df1 <- read.csv("C:/Rwork/03/03_암발생자수.csv")
df1
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1)
names(df1) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
df1
#암종류별 성별 분석
library(dplyr)
#데이터 불러오기(암발생자수)
df1 <- read.csv("C:/Rwork/03/03_암발생자수.csv")
df1
View(df1)
# 열명 변경
# "암종별", "성별", "연령별", "발생자수", "조발생률"
names(df1)
names(df1) <- c("암종별", "성별", "연령별", "발생자수", "조발생률")
df1
View(df1)
# 데이터셋 조회
# 1) 특정 변수 조회
df1['암종별']
# 3) 특정 행 조회 :1행 조회
df1[1,]
# 2, 4행 조회
df1[c(2, 4),]
# 4)특정행 제거 : 1행제거
df2 <- df1[-1, ]
head(df2)
# 암종류 확인
unique(df2$암종별) # 중복제거
# 5) 특정행 열 조회
df31[1,'암종별']
# 열 데이터 타입 확인
str(df1)
View(df2)
# 5) 특정행 열 조회
df2[1,'암종별']
# 암종류 확인
unique(df2$암종별) # 중복제거
# 모든암 제거하고 연령별이 계인 데이터
df3 <- df2 %>%
filter(암종별 != "모든 암(C00-C96)") %>%
filter(연령별 == "계")
unique(df3$암종별)
df3
# 5) 특정행 열 조회
df3[1,'암종별']
df3[1:3, '암종별']
df3[1:3, c('암종별','발생자수')]
# 열 데이터 타입 확인
str(df3)
# 값 변경 : - => 0
df3$발생자수 <- ifelse(df3$발생자수 == '-', 0, df3$발생자수)
df3$조발생률 <- ifelse(df3$조발생률 == '-', 0, df3$조발생률)
str(df3)
# 열 데이터 타입 확인
str(df3)
# 값 변경 : - => 0
df3$발생자수 <- ifelse(df3$발생자수 == '-', 0, df3$발생자수)
df3$조발생률 <- ifelse(df3$조발생률 == '-', 0, df3$조발생률)
str(df3)
View(df3)
# 열 데이터타입 변경
df3$발생자수 <- as.numeric(df3$발생자수)
df3$조발생률 <- as.numeric(df3$조발생률)
str(df3)
# 성별 계
df31 <- df3 %>%
filter(성별 == "계")
df31
# 성별 남여
df32 <- df3 %>%
filter(성별 != "계")
df32
df31 <- df31[, c('암종별', "발생자수")]
df31
df32 <- df32[, c('암종별', '성별', "발생자수")]
df32
# 그래프
library(ggplot2)
qplot(암종별, data = df3, fill = 발생자수)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
str(df3)
qplot(암종별, data = df31, fill = 발생자수)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
qplot(암종별, data = df31)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
qplot(암종별, data = df31, fill = 발생자수)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
df31
help(qplot)
qplot(암종별, 발생자수, data = df31)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
qplot(암종별, 발생자수, data = df31, fill = 발생자수)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
help(qplot)
qplot(암종별, 발생자수, data = df31)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
help(qplot)
qplot(암종별, 발생자수, data = df31, xlab = 90)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
qplot(암종별, 발생자수, data = df31, xlab = 45)+
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))
help(qplot)
qplot(암종별, 발생자수, data = df31, geom = 'histogram')
qplot(x = 암종별, y = 발생자수, data = df31, geom = 'histogram')
qplot(x = '암종별', y = '발생자수', data = df31, geom = 'histogram')
qplot(x = '암종별', y = '발생자수', data = df31, geom = 'bar')
qplot(data = df31, geom = 'bar')
qplot(data = df31, geom = "bar")
qplot(x = 암종별, data = df31, geom = "bar")
qplot(x = 암종별, y = 발생자수, data = df31, geom = "bar")
qplot(x = 암종별, data = df31)
qplot(x = 암종별, data = df31, fill = 발생자수)
qplot(x = 암종별, data = df31, fill = 암종별)
qplot(x = 암종별, data = df31)
qplot(data = df31)
qplot(x = 암종별, data = df31)
source("C:/Rwork/04/03_2.R", encoding = 'UTF-8', echo=TRUE)
qplot(x = 발생자수, data = df31)
qplot(x = 발생자수, data = df31)
qplot(x = 암종별, data = df31)
ggplot(mapping =aes(x=암종별, y=발생자수, fill=발생자수), data=df31) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("연령대별 암발생자 성별 분석")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
help(ggplot)
ggplot(mapping =aes(x=암종별, y=발생자수, fill=발생자수), data=df31) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=발생자수), data=df31) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=발생자수), data=df31) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df32) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df32) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=발생자수), data=df31) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'), axis.text.x=element_text(angle=90, hjust=1))
ggplot(mapping =aes(x=암종별, y=발생자수, fill=성별), data=df32) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("암종별 성별 발생자수")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'), axis.text.x=element_text(angle=90, hjust=1))
#R 내장 데이터 가져오기
data(iris)
#iris 데이터 확인
str(iris)
#R 내장 데이터 가져오기
data(iris)
#iris 데이터 확인
str(iris)
View(iris)
View(iris)
#iris : 꽃받침, 꽃잎 데이터 추출
iris1 <- iris[c('Sepal.Length','Sepal.Width','Petal.Length','Petal.Width')]
iris1
View(iris1)
#기술통계량
summary(iris1)
#상관계수
cor(iris1, method="pearson")
#색의 농도로 상관계수
install.packages("corrgram")
library(corrgram)
corrgram(iris1, upper.panel = panel.conf)
#상관계수 챠트
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
chart.Correlation(iris1)
#학습데이터와 테스트데이터 분리
x <- sample(1:nrow(iris1), 0.7 * nrow(iris1))
x
train <- iris[x, ]
test <- iris[-x, ]
nrow(train)
nrow(test)
#회귀모델 : 꽃받침 길이 예측
names(iris1)
#학습
model <- lm(formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width, data=train)
model
#예측
pred <- predict(model, test)
pred
#데이터불러오기
df <- read.csv("./data/05_titanic.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
#데이터불러오기
df <- read.csv("C:/Rwork/05/05_titanic.csv",
header = T,
stringsAsFactors = F,
fileEncoding = 'euc-kr')
head(df)
